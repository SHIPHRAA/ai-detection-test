name: Terraform plan

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'terraform/**'
    branches:
      - main

jobs:
  exec:
    strategy:
      matrix:
        env: [dev, prod]
    environment: ${{ matrix.env }}
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    env:
      TERRAFORM_DIR: terraform/environments/${{ matrix.env }}
    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v0.8.0
        with:
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/deepfake-github-wip/providers/deepfake-oidc-provider
          service_account: deepfake-wip-user@deepfake-${{ matrix.env }}.iam.gserviceaccount.com

      - uses: hashicorp/setup-terraform@v2

      - run: cd "$TERRAFORM_DIR"; terraform fmt -check -recursive
      - run: cd "$TERRAFORM_DIR"; terraform init
      - run: cd "$TERRAFORM_DIR"; terraform validate
      - id: plan      
        run: cd "$TERRAFORM_DIR"; terraform plan -no-color

      - uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### [${{ matrix.env }}] Terraform Plan ðŸ“–\n\`\`\`\n${{ steps.plan.outputs.stdout }}\n\`\`\``;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
