name: Deploy Dev Cloud Run BE

concurrency: self-hosted-${{ github.ref_name }}

on:
  workflow_dispatch:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/deploy-cloud-run-be.yaml"
    branches:
      - main

jobs:
  build-and-push:
    environment: dev
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    env:
      IMAGE: asia-northeast1-docker.pkg.dev/deepfake-dev/deepfake/deepfake-backend:${{ github.sha }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v0.8.0
        with:
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/deepfake-github-wip/providers/deepfake-oidc-provider
          service_account: deepfake-wip-user@deepfake-dev.iam.gserviceaccount.com
      - uses: "google-github-actions/setup-gcloud@v1"
      - run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev --quiet

      - run: docker build -t "$IMAGE" ./backend
      - run: docker push "$IMAGE"

  start-runner:
    runs-on: ubuntu-24.04
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: google-github-actions/auth@v0.8.0
        with:
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/deepfake-github-wip/providers/deepfake-oidc-provider
          service_account: deepfake-wip-user@deepfake-dev.iam.gserviceaccount.com
      - uses: "google-github-actions/setup-gcloud@v1"
      - run: gcloud compute instances start ${{ vars.RUNNER_NAME }} --zone ${{ vars.RUNNER_ZONE }}

  db-migration:
    needs: start-runner
    environment: dev
    runs-on: [self-hosted, dev]
    timeout-minutes: 20
    permissions:
      id-token: write
      contents: read
    env:
      MIG_FILE: "/tmp/migrate.conf"
    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v0.8.0
        with:
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/deepfake-github-wip/providers/deepfake-oidc-provider
          service_account: deepfake-wip-user@deepfake-dev.iam.gserviceaccount.com
      - uses: "google-github-actions/setup-gcloud@v1"

      - run: |
          touch "$MIG_FILE"
          echo "DATABASE_MIGRATIONS_DIR=\"${{ github.workspace }}/backend/docker/mysql/migration\"" >> "$MIG_FILE"
          echo "::add-mask::${{ secrets.MYSQL_HOST }}"
          echo "DATABASE_HOST=\"${{ secrets.MYSQL_HOST }}\"" >> "$MIG_FILE"
          echo "::add-mask::${{ secrets.MYSQL_PORT }}"
          echo "DATABASE_PORT=\"${{ secrets.MYSQL_PORT }}\"" >> "$MIG_FILE"
          echo "::add-mask::${{ secrets.MYSQL_DATABASE }}"
          echo "DATABASE_NAME=\"${{ secrets.MYSQL_DATABASE }}\"" >> "$MIG_FILE"
          echo "::add-mask::${{ secrets.MYSQL_USER }}"
          echo "DATABASE_USER=\"${{ secrets.MYSQL_USER }}\"" >> "$MIG_FILE"
          echo "::add-mask::$(gcloud secrets versions access latest --secret=mysql-password)"
          MYSQL_SECRET=$(gcloud secrets versions access latest --secret=mysql-password)
          echo "DATABASE_PASSWORD=\"${MYSQL_SECRET}\"" >> "$MIG_FILE"

      - run: |
          source /home/github-runner/db-migration/venv/bin/activate
          db-migrate --config=$MIG_FILE

  stop-runner:
    needs: db-migration
    runs-on: ubuntu-24.04
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: google-github-actions/auth@v0.8.0
        with:
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/deepfake-github-wip/providers/deepfake-oidc-provider
          service_account: deepfake-wip-user@deepfake-dev.iam.gserviceaccount.com
      - uses: "google-github-actions/setup-gcloud@v1"

      - run: gcloud compute instances stop ${{ vars.RUNNER_NAME }} --zone ${{ vars.RUNNER_ZONE }}

  deploy:
    needs: [build-and-push, db-migration]
    environment: dev
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    env:
      IMAGE: asia-northeast1-docker.pkg.dev/deepfake-dev/deepfake/deepfake-backend:${{ github.sha }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v0.8.0
        with:
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/deepfake-github-wip/providers/deepfake-oidc-provider
          service_account: deepfake-wip-user@deepfake-dev.iam.gserviceaccount.com
      - uses: "google-github-actions/setup-gcloud@v1"

      - name: deploy to Cloud Run for BE
        run: |
          # https://cloud.google.com/sdk/gcloud/reference/run/deploy
          gcloud run deploy deepfake-backend \
            --image ${{ env.IMAGE }} \
            --port 8080 \
            --project deepfake-dev \
            --region asia-northeast1 \
            --service-account deepfake-backend@deepfake-dev.iam.gserviceaccount.com \
            --max-instances 50 \
            --ingress all \
            --allow-unauthenticated \
            --cpu 1 \
            --memory 2Gi\
            --concurrency 30 \
            --quiet \
            --timeout 30m \
            --network deepfake \
            --subnet subnet-tokyo-01 \
            --vpc-egress private-ranges-only \
            --update-secrets=MYSQL_PASSWORD=mysql-password:latest,JWT_SECRET=jwt-secret:latest \
            --set-env-vars "\
            ENV=dev,\
            MYSQL_HOST=${{ secrets.MYSQL_HOST }},\
            MYSQL_PORT=${{ secrets.MYSQL_PORT }},\
            MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }},\
            MYSQL_USER=${{ secrets.MYSQL_USER }},\
            BING_API_SUBSCRIPTION_KEY=${{ secrets.BING_API_SUBSCRIPTION_KEY }},\
            ALLOW_ORIGINS=${{ vars.ALLOW_ORIGINS }},\
            PROJECT_ID=${{ vars.PROJECT_ID }},\
            BUCKET_NAME=${{ vars.BUCKET_NAME }},\
            SERVICE_ACCOUNT=${{ vars.SERVICE_ACCOUNT }},\
            WEB_CONCURRENCY=${{ vars.WEB_CONCURRENCY }},\
            FROM_MAIL=${{ vars.FROM_MAIL }},\
            FE_API_URL=${{ vars.FE_API_URL }},\
            BE_API_URL=${{ vars.BE_API_URL }},\
            IMAGE_ESTIMATION_API_ENDPOINT=${{ vars.IMAGE_ESTIMATION_API_ENDPOINT }},\
            VIDEO_ESTIMATION_API_ENDPOINT=${{ vars.VIDEO_ESTIMATION_API_ENDPOINT }},\
            AUDIO_ESTIMATION_API_ENDPOINT=${{ vars.AUDIO_ESTIMATION_API_ENDPOINT }}"
